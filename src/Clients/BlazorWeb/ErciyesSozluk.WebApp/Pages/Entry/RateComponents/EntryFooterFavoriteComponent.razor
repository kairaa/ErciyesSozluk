@using ErciyesSozluk.WebApp.Infrastructure.Models;
@*her entry'nin altında bulunan fav butonudur*@
@*sadece giriş yapan kullanıcılar fav işlemlerini gerçekleştirebilir*@
@if (identityService.IsLoggedIn)
{
    <span class="entry-fav @(IsFavorited ? "entry-faved" : "entry-not-faved") p-3">
        <span @onclick="(() => FavoritedClick())">
            @FavoritedCount
        </span>
    </span>
}

@*
<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    bu kısımda da yukarıdaki gibi, giriş yapan kullanıcı için ayrı, giriş yapmayan kullanıcı için ayrı işlemler yapılabilir
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
*@

@code {
    [Inject]
    IIdentityService identityService { get; set; }

    [Parameter]
    public bool IsFavorited { get; set; }

    [Parameter]
    public Guid? EntryId { get; set; }

    [Parameter]
    public int FavoritedCount { get; set; }

    [Parameter]
    public EventCallback<FavClickedEventArgs> OnFavClicked { get; set; }

    public async Task FavoritedClick()
    {
        //favlanmamış entry'de fav butonuna tıklanırsa favlanmış olur
        //bundan dolayı IsFavorited'ın tersi event'e gönderilir
        IsFavorited = !IsFavorited;
        var eventArgs = new FavClickedEventArgs();
        eventArgs.EntryId = EntryId;

        await OnFavClicked.InvokeAsync(eventArgs);

        eventArgs.IsFaved = IsFavorited;

        StateHasChanged();
    }
}