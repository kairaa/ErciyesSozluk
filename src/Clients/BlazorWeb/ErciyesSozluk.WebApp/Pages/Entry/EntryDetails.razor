@page "/entry/{id:guid}"
@using ErciyesSozluk.Common.Models.Page;
@using ErciyesSozluk.Common.Models.RequestModels;
@using ErciyesSozluk.WebApp.Pages.Components
@using ErciyesSozluk.WebApp.Pages.EntryComment
@using Microsoft.AspNetCore.Components.Authorization

@if (entry is not null)
{
    <EntryViewerComponent Entry="@entry" />
    <br />

    if (comments is not null)
    {
        foreach (var comment in comments.Results)
        {
            <EntryCommentViewerComponent EntryComment="@comment" />
        }
    }

    <br />
    // TODO Pagination Component will be here
    <br />
    <br />
    <PaginationComponent TotalPage="@comments.PageInfo.TotalPageCount"
                         CurrentPage="@currentPage"
                         OnPageChanged="@OnPageChanged" />
    //giriş yapan kullanıcılar entry'e comment ekleme component'ini görür
    <AuthorizeView>
        <Authorized>
            <br />
            <br />

            <CreateEntryCommentComponent EntryId="@entry.Id"
                                     EntrySubject="@entry.Subject"
                                     OnClicked="@OnCommentCreate" />

        </Authorized>
    </AuthorizeView>
}

@code {

    [Parameter]
    public Guid id { get; set; }

    [Inject]
    IEntryService entryService { get; set; }


    private GetEntryDetailViewModel entry = new();
    private PagedViewModel<GetEntryCommentsViewModel> comments = new();
    private int currentPage = 1;

    protected override async Task OnParametersSetAsync()
    {
        //{id:guid} set edileceği zaman çalışır
        entry = await entryService.GetEntryDetail(id);

        await RefreshComments(currentPage);

        currentPage = comments.PageInfo.CurrentPage;
    }

    public async Task OnCommentCreate(CreateEntryCommentCommand command)
    {
        await entryService.CreateEntryComment(command);
        await RefreshComments(currentPage);
    }

    private async Task RefreshComments(int pageNumber)
    {
        comments = await entryService.GetEntryComments(entry.Id, pageNumber, 10);
    }

    public async Task OnPageChanged(int pageNumber)
    {
        currentPage = pageNumber;
        comments = await entryService.GetEntryComments(entry.Id, currentPage, 10);
    }
}